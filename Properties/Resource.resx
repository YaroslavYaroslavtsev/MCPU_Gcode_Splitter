<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="green_circle" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAAXFJREFUWEfFl8FK
        AzEQQKNorXoqfkG1uz15398TBA8ifoV4UxHxoIggfoM3b95EFNSLbFpf2l0a1mlrdzezA6+znUxmp0ma
        TMxcGXY7kCwPtvc30v4Tz8NZbKb95xW7c8BzAp0sSkkhQMv2LvPgi9K20Q26RCJ0WBp099pp/J4HqwKj
        d4L+ZxI4MoRnfoA6WLPRLXpOEjgw5Fd+xzpZT+NH9JQkAv3yIkzrHfpvEm7Oi86hYE2cor0k+MLwvPlO
        CiTZ243h5ceCQ1CYins0o8AHC+/bb1QkUZ37Ivw1D83Wz+651KgBW/uLIYtPqVEN0aiJaNRENGoiGjUR
        jZqIRk1aNvoSG7RofCNqciumZjxya4DDqLFpGB/Jo0xkh2BQAjygs6JkXJC8+g4KTAoSJ82WZE4wrNre
        he8YgkklJAkNHM/Xfoc6mV2W5xJoJKaW46LgOLqa2fjDD1KWxa5mvtCpyk0pu45VvCW7zgQJcz035heR
        aj5xTbTd7gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="red_circle" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMS41ZEdYUgAAAbtJREFUWEfNl7tK
        A0EUhhcRsZAgImIhIhbiE1iLtQ/gE4iFWIqFjQQJFiKWYmEtlhYWItYSRMTKQkTEIgQJFiJW8fuTs2Rc
        J2GjuxN/+IqcObe9ZHZOlFb1KOqHediGM7iHClThAS5gFxZh0ML+LpKNwha8QD0lNdiHCUvTvQjug1VL
        5iuShg9Q8wOWNp0IGAbdZl/S33ANk5a+s3AcgzsLzJJnmLUyfuGgK7+1gDzQezRl5b6LBT3zU3PME13g
        z38JxhXHKW9KVrYpDLr1r45D3nzCtJXHEkWbzmIoDuLievZPzkIo3mFIDcw5xtAsqYH1hDEkh2rgOGEM
        SVkNXCWMIamqAX1WfYshqP2LBsoJY0gqauAkYQxJ4yXcSBhD0vgb9nwj0lb86BhDoa24EH8PevEYjhrF
        JX4UQMdrn2Me6HM8Y+WbwrDsOOTNjpVtCaPehSxPwu3Qgdc/uLAwYg6+wCzQobR1EvIJh3HIowkV73ws
        j4Wj7sS5BWbBDfiP4+1EgN6JNXgDX9I0aDQrQnejmSuCNSmVQJOwr4iPeDhNN46lEck0ni+AmonHc+0d
        Os5rPL+EPehiPI+iL4Q6buuOfsVeAAAAAElFTkSuQmCC
</value>
  </data>
</root>